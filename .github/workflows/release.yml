name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Update version
        run: |
          sed -i 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml
          sed -i 's/__version__ = ".*"/__version__ = "${{ github.event.inputs.version }}"/' src/git_wiki_builder/__init__.py

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Create release commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml src/git_wiki_builder/__init__.py
          git commit -m "Release v${{ github.event.inputs.version }}"
          git tag "v${{ github.event.inputs.version }}"

      - name: Push changes
        run: |
          git push origin main
          git push origin "v${{ github.event.inputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "Release v${{ github.event.inputs.version }}"
          draft: false
          prerelease: false

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
